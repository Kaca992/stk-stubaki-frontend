@import '_mixins';
@import '_variables';

//config
$grid-columns: 12;
$grid-max-width: 1440px;
$grid-gutter-width: 1.5em; 

// Grid system
//
// mixins and classes for grid layout

// Centered container element
@mixin container($gutter: $grid-gutter-width) {
  margin-right: auto;
  margin-left: auto;
  padding-left:  floor(($gutter / 2));
  padding-right: ceil(($gutter / 2));
  @include clearfix;
}

// Creates a wrapper for a series of columns
@mixin row($gutter: $grid-gutter-width) {
  margin-left:  ceil(($gutter / -2));
  margin-right: floor(($gutter / -2));
  @include clearfix;
}

// Generate the columns(media invariant)
@mixin make-column($columns, $gutter: $grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-left:  ($gutter / 2);
  padding-right: ($gutter / 2);
  float: left;
  width: percentage(($columns / $grid-columns));
}
@mixin make-column-offset($columns) {
  margin-left: percentage(($columns / $grid-columns));
}
@mixin make-column-push($columns) {
  left: percentage(($columns / $grid-columns));
}
@mixin make-column-pull($columns) {
  right: percentage(($columns / $grid-columns));
}

// Generate the small columns
@mixin make-sm-column($columns, $gutter: $grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-left:  ($gutter / 2);
  padding-right: ($gutter / 2);

  @include mobile {
    float: left;
    width: percentage(($columns / $grid-columns));
  }
}
@mixin make-sm-column-offset($columns) {
  @include mobile {
    margin-left: percentage(($columns / $grid-columns));
  }
}
@mixin make-sm-column-push($columns) {
  @include mobile {
    left: percentage(($columns / $grid-columns));
  }
}
@mixin make-sm-column-pull($columns) {
  @include mobile {
    right: percentage(($columns / $grid-columns));
  }
}

// Generate the medium columns
@mixin make-md-column($columns, $gutter: $grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-left:  ($gutter / 2);
  padding-right: ($gutter / 2);

  @include tablet {
    float: left;
    width: percentage(($columns / $grid-columns));
  }
}
@mixin make-md-column-offset($columns) {
  @include tablet {
    margin-left: percentage(($columns / $grid-columns));
  }
}
@mixin make-md-column-push($columns) {
  @include tablet {
    left: percentage(($columns / $grid-columns));
  }
}
@mixin make-md-column-pull($columns) {
  @include tablet {
    right: percentage(($columns / $grid-columns));
  }
}

// Generate the large columns
@mixin make-lg-column($columns, $gutter: $grid-gutter-width) {
  position: relative;
  min-height: 1px;
  padding-left:  ($gutter / 2);
  padding-right: ($gutter / 2);

  @include desktop {
    float: left;
    width: percentage(($columns / $grid-columns));
  }
}
@mixin make-lg-column-offset($columns) {
  @include desktop {
    margin-left: percentage(($columns / $grid-columns));
  }
}
@mixin make-lg-column-push($columns) {
  @include desktop {
    left: percentage(($columns / $grid-columns));
  }
}
@mixin make-lg-column-pull($columns) {
  @include desktop {
    right: percentage(($columns / $grid-columns));
  }
}


//created classes

.grid-container{
  @include container();
}

.grid-row{
  @include row();
}

@for $i from 1 through $grid-columns {
    .column-#{$i} { 
        @include make-column($i,0); 
    } 
}

@for $i from 1 through $grid-columns {
    .column-sm-#{$i} { 
        @include make-sm-column($i,0); 
    } 
}

@for $i from 1 through $grid-columns {
    .column-md-#{$i} { 
        @include make-md-column($i,0);
    } 
}

@for $i from 1 through $grid-columns {
    .column-lg-#{$i} { 
        @include make-lg-column($i,0);
    } 
}